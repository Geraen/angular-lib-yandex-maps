/**
 * Событие, бросаемое менеджером событий IEventManager
 */
export interface IEvent {
    
    /**
     * Разрешает распространение данного события на карту
     */
    allowMapEvent(): void;

    /**
     * Вызывает указанный метод у исходного события. 
     * Второй и последующие аргументы передаются методу при вызове
     * @param name Название метода
     */
    callMethod(name: string): void;

    /**
     * Возвращает свойство события по ключу. 
     * С помощью этого метода можно получать доступ как 
     * к свойствам исходного события, так и к дополнительным свойствам,
     * предоставляемым API карт
     * @param name Название свойства
     */
    get(name: string): any;

    /**
     * Возвращает исходное событие
     */
    getSourceEvent(): IEvent | null;

    /**
     * Возвращает true, если реакция по умолчанию на событие отменена
     */
    isDefaultPrevented(): boolean;

    /**
     * Возвращает true, если обработка события прервана
     */
    isImmediatePropagationStopped(): boolean;

    /**
     * Возвращает true, если событие карты разрешено
     */
    isMapEventAllowed(): boolean;

    /**
     * Возвращает true, если распространение события прервано
     */
    isPropagationStopped(): boolean;

    /**
     * Отменяет реакцию по умолчанию на событие в 
     * рамках системы событий API Яндекс.Карт
     */
    preventDefault(): void;

    /**
     * Прекращает обработку события в системе событий API Яндекс.Карт. Т.е. после вызова данного 
     * метода ни один обработчик данного события не будет вызван
     */
    stopImmediatePropagation(): void;

    /**
     * Прекращает распространение события в системе событий API Яндекс.Карт
     */
    stopPropagation(): void;
}
